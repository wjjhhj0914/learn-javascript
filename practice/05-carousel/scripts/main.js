// üöÄ Ï∫êÎü¨ÏÖÄ(Carousel) Ïª¥Ìè¨ÎÑåÌä∏ ÎßåÎì§Í∏∞
// ----------------------------------------------------------------

// 1. Î¨∏ÏÑúÏóêÏÑú Ï†úÏñ¥Ìï† ÎåÄÏÉÅ ÏöîÏÜå ÏÑ†ÌÉù(Ï∞æÍ∏∞)
(() => {
  // Ï∫êÎü¨ÏÖÄ Ïª¥Ìè¨ÎÑåÌä∏ Ï∞æÍ∏∞
  const carousel = document.querySelector('.carousel');

  // Ï∫êÎü¨ÏÖÄ Ïª¥ÌÖêÏ∏† ÎûòÌçº
  const contentsWrapper = carousel.querySelector('.carousel__contents');

  // Ïù¥Ï†Ñ ÌÉêÏÉâ Î≤ÑÌäº Ï∞æÍ∏∞
  const prevButton = carousel.querySelector('[aria-label^="Ïù¥Ï†Ñ"]'); // ÏãúÏûëÌïòÎäî Í∞íÏù¥ ÏùºÏπòÌïòÎäî Í∞íÏùÑ Ï∞æÎäî Í±∞ÎãàÍπå Ï∫êÎüø Í∏∞Ìò∏

  // Îã§Ïùå ÌÉêÏÉâ Î≤ÑÌäº Ï∞æÍ∏∞
  const nextButton = carousel.querySelector('[aria-label^="Îã§Ïùå"]');
});

// 2. ÏÉÅÌÉú ÌÅ¥ÎûòÏä§ Ïù¥Î¶Ñ ÏÉÅÏàòÎ°ú ÏÑ§Ï†ï
(() => {
  const carousel = document.querySelector('.carousel');
  const contentsWrapper = carousel.querySelector('.carousel__contents');
  const prevButton = carousel.querySelector('[aria-label^="Ïù¥Ï†Ñ"]');
  const nextButton = carousel.querySelector('[aria-label^="Îã§Ïùå"]');
  
  // ÌôúÏÑ± ÏÉÅÌÉúÎ•º ÎÇòÌÉÄÎÇ¥Îäî ÌÅ¥ÎûòÏä§ Ïù¥Î¶Ñ ÏßÄÏ†ï (Ïú†ÏßÄ Î≥¥Ïàò Í≥†Î†§)
  const SELECTED_CLASSNAME = 'is-selected';
});

// 3-1. ÌòÑÏû¨ / Îã§Ïùå ÏΩòÌÖêÏ∏† ÌÉêÏÉâ | Îã§Ïùå ÌÉêÏÉâ Í∏∞Îä•(Ìï®Ïàò) Íµ¨ÌòÑ
(() => {
  const carousel = document.querySelector('.carousel');
  const contentsWrapper = carousel.querySelector('.carousel__contents');
  const prevButton = carousel.querySelector('[aria-label^="Ïù¥Ï†Ñ"]');
  const nextButton = carousel.querySelector('[aria-label^="Îã§Ïùå"]');
  
  const SELECTED_CLASSNAME = 'is-selected';

  // Îã§Ïùå ÌÉêÏÉâ Î≤ÑÌäº ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏ Î¶¨Ïä§ÎÑà Ï∂îÍ∞Ä
  // Íµ¨ÌòÑÌï† Í∏∞Îä•ÏùÄ Îã§Ïùå ÏΩòÌÖêÏ∏† ÌÉêÏÉâ
  // ÌòÑÏû¨ / Îã§Ïùå ÏΩòÌÖêÏ∏† ÌÉêÏÉâ
  nextButton.addEventListener('click', () => {
    // console.log('button clicked');

    // ÌòÑÏû¨ ÏÑ†ÌÉùÎêú ÏΩòÌÖêÏ∏† Ï∞æÍ∏∞ (is-selected ÌÅ¥ÎûòÏä§Î•º Ï∞æÏùåÏúºÎ°úÏç®)
    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    console.log(selectedContent);

    // Îã§ÏùåÏóê ÏÑ†ÌÉùÎê† ÏΩòÌÖêÏ∏† ÌÉêÏÉâ
    const nextContent = selectedContent.nextElementSibling;
  })
});

// 3-2. Îã§Ïùå ÏΩòÌÖêÏ∏†Î°ú Ïù¥Îèô | Îã§Ïùå ÌÉêÏÉâ Í∏∞Îä•(Ìï®Ïàò) Íµ¨ÌòÑ
(() => {
  const carousel = document.querySelector('.carousel');
  const contentsWrapper = carousel.querySelector('.carousel__contents');
  const prevButton = carousel.querySelector('[aria-label^="Ïù¥Ï†Ñ"]');
  const nextButton = carousel.querySelector('[aria-label^="Îã§Ïùå"]');
  
  const SELECTED_CLASSNAME = 'is-selected';

  nextButton.addEventListener('click', () => {
    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    console.log(selectedContent);
    const nextContent = selectedContent.nextElementSibling;

    // Îã§Ïùå ÏΩòÌÖêÏ∏†Î°ú Ïù¥Îèô
    // Îã§Ïùå ÏΩòÌÖêÏ∏†Ïùò Î∏åÎùºÏö∞Ï†ÄÏóê ÏùòÌï¥ Í≥ÑÏÇ∞Îêú ÎÑàÎπÑ Í∞íÏùÑ ÏùΩÍ∏∞
    const distance = getComputedStyle(nextContent).getPropertyValue('left');
    console.log(distance);

    // ÏΩòÌÖêÏ∏†Îì§ÏùÑ Í∞êÏãº ÎûòÌçºÏóê transfrom Ïù∏ÎùºÏù∏ Ïä§ÌÉÄÏùº ÏÑ§Ï†ï
    // contentsWrapper.style.setProperty('transform', 'translateX(-'+'800px'+')');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');
  })
});

// 3-3. Îã§Ïùå ÏΩòÌÖêÏ∏†Î°ú Ïù¥Îèô | Îã§Ïùå ÌÉêÏÉâ Í∏∞Îä•(Ìï®Ïàò) Íµ¨ÌòÑ
(() => {
  const carousel = document.querySelector('.carousel');
  const contentsWrapper = carousel.querySelector('.carousel__contents');
  const prevButton = carousel.querySelector('[aria-label^="Ïù¥Ï†Ñ"]');
  const nextButton = carousel.querySelector('[aria-label^="Îã§Ïùå"]');
  
  const SELECTED_CLASSNAME = 'is-selected';

  nextButton.addEventListener('click', () => {
    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const nextContent = selectedContent.nextElementSibling;

    const distance = getComputedStyle(nextContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    // ÏÑ†ÌÉùÎêú ÏÉÅÌÉú Î≥ÄÍ≤Ω
    // Ïù¥Ï†Ñ ÏÑ†ÌÉùÎêú ÏΩòÌÖêÏ∏†ÏóêÏÑú ÌôúÏÑ± ÏÉÅÌÉú ÌÅ¥ÎûòÏä§ Ïù¥Î¶Ñ Ï†úÍ±∞
    selectedContent.classList.remove(SELECTED_CLASSNAME);
    nextContent.classList.add(SELECTED_CLASSNAME);
  })
});

// 3-4. Îã§Ïùå ÏΩòÌÖêÏ∏†Î°ú Ïù¥Îèô | Îã§Ïùå ÌÉêÏÉâ Í∏∞Îä•(Ìï®Ïàò) Íµ¨ÌòÑ
(() => {
  const carousel = document.querySelector('.carousel');
  const contentsWrapper = carousel.querySelector('.carousel__contents');
  const prevButton = carousel.querySelector('[aria-label^="Ïù¥Ï†Ñ"]');
  const nextButton = carousel.querySelector('[aria-label^="Îã§Ïùå"]');
  
  const SELECTED_CLASSNAME = 'is-selected';

  nextButton.addEventListener('click', () => {
    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const nextContent = selectedContent.nextElementSibling;

    // Îã§Ïùå ÌÉêÏÉâ Î≤ÑÌäº Í∞êÏ∂§
    // 1 | 2 | 3
    // Îã§Ïùå Ïª®ÌÖêÏ∏†Í∞Ä ÏóÜÏùÑ Í≤ΩÏö∞
    if (!nextContent.nextElementSibling) nextButton.hidden = true;
    
    const distance = getComputedStyle(nextContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    // ÏÑ†ÌÉùÎêú ÏÉÅÌÉú Î≥ÄÍ≤Ω
    // Ïù¥Ï†Ñ ÏÑ†ÌÉùÎêú ÏΩòÌÖêÏ∏†ÏóêÏÑú ÌôúÏÑ± ÏÉÅÌÉú ÌÅ¥ÎûòÏä§ Ïù¥Î¶Ñ Ï†úÍ±∞
    selectedContent.classList.remove(SELECTED_CLASSNAME);
    nextContent.classList.add(SELECTED_CLASSNAME);
  })
});

// 4-1. Îã§Ïùå ÏΩòÌÖêÏ∏†Î°ú Ïù¥Îèô | Îã§Ïùå ÌÉêÏÉâ Í∏∞Îä•(Ìï®Ïàò) Íµ¨ÌòÑ
(() => {
  const carousel = document.querySelector('.carousel');
  const contentsWrapper = carousel.querySelector('.carousel__contents');
  const prevButton = carousel.querySelector('[aria-label^="Ïù¥Ï†Ñ"]');
  const nextButton = carousel.querySelector('[aria-label^="Îã§Ïùå"]');
  
  const SELECTED_CLASSNAME = 'is-selected';

  nextButton.addEventListener('click', () => {
    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const nextContent = selectedContent.nextElementSibling;

    if (!nextContent.nextElementSibling) nextButton.hidden = true;

    const distance = getComputedStyle(nextContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    nextContent.classList.add(SELECTED_CLASSNAME);
  })

  prevButton.addEventListener('click', () => {

    // ÌòÑÏû¨ / Îã§Ïùå ÏΩòÌÖêÏ∏† Ï∞æÍ∏∞
    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    // ÏÑ†ÌÉùÎêú ÏΩòÌÖêÏ∏†Ïùò Ïù¥Ï†Ñ ÏúÑÏπòÏóê ÏûàÎäî ÏΩòÌÖêÏ∏† ÌÉêÏÉâ
    const prevContent = selectedContent.previousElementSibling;
    console.log(prevContent);
  })
});

// 4-2. Îã§Ïùå ÏΩòÌÖêÏ∏†Î°ú Ïù¥Îèô | Îã§Ïùå ÌÉêÏÉâ Í∏∞Îä•(Ìï®Ïàò) Íµ¨ÌòÑ
(() => {
  const carousel = document.querySelector('.carousel');
  const contentsWrapper = carousel.querySelector('.carousel__contents');
  const prevButton = carousel.querySelector('[aria-label^="Ïù¥Ï†Ñ"]');
  const nextButton = carousel.querySelector('[aria-label^="Îã§Ïùå"]');
  
  const SELECTED_CLASSNAME = 'is-selected';

  nextButton.addEventListener('click', () => {
    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const nextContent = selectedContent.nextElementSibling;

    if (!nextContent.nextElementSibling) nextButton.hidden = true;

    const distance = getComputedStyle(nextContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    nextContent.classList.add(SELECTED_CLASSNAME);
  })

  prevButton.addEventListener('click', () => {
    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const prevContent = selectedContent.previousElementSibling;
    console.log(prevContent);

    // Ïù¥Ï†Ñ ÏΩòÌÖêÏ∏†Î°ú Ïù¥Îèô

    // prevContentÎ°úÎ∂ÄÌÑ∞ Í±∞Î¶¨Î•º Í≥ÑÏÇ∞Ìï¥ÏÑú Í∞ÄÏ†∏ÏôÄÏïº Ìï®
    const distance = getComputedStyle(prevContent).getPropertyValue('left');
    // contentsWrapperÏóê transform Ïä§ÌÉÄÏùº ÏßÄÏ†ï
    contentsWrapper.style.setProperty('transform', 'translateX(-'+ distance +')');
  })
});

// 4-3. ÏÑ†ÌÉùÎêú ÏÉÅÌÉú Î≥ÄÍ≤Ω | Ïù¥Ï†Ñ ÌÉêÏÉâ Í∏∞Îä•(Ìï®Ïàò) Íµ¨ÌòÑ
(() => {
  const carousel = document.querySelector('.carousel');
  const contentsWrapper = carousel.querySelector('.carousel__contents');
  const prevButton = carousel.querySelector('[aria-label^="Ïù¥Ï†Ñ"]');
  const nextButton = carousel.querySelector('[aria-label^="Îã§Ïùå"]');
  
  const SELECTED_CLASSNAME = 'is-selected';

  nextButton.addEventListener('click', () => {
    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const nextContent = selectedContent.nextElementSibling;

    if (!nextContent.nextElementSibling) nextButton.hidden = true;

    const distance = getComputedStyle(nextContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    nextContent.classList.add(SELECTED_CLASSNAME);
  })

  prevButton.addEventListener('click', () => {
    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const prevContent = selectedContent.previousElementSibling;

    const distance = getComputedStyle(prevContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');
    
    // ÏÑ†ÌÉùÎêú ÏÉÅÌÉú Î≥ÄÍ≤Ω
    // Ïù¥Ï†Ñ ÏÑ†ÌÉùÎêú ÏΩòÌÖêÏ∏†ÏóêÏÑú ÌôúÏÑ± ÏÉÅÌÉú ÌÅ¥ÎûòÏä§ Ïù¥Î¶Ñ Ï†úÍ±∞
    selectedContent.classList.remove(SELECTED_CLASSNAME);
    // ÌòÑÏû¨ ÏÑ†ÌÉùÎêú ÏΩòÌÖêÏ∏†Ïóê ÌôúÏÑ± ÏÉÅÌÉú ÌÅ¥ÎûòÏä§ Ïù¥Î¶Ñ Ï∂îÍ∞Ä
    prevContent.classList.add(SELECTED_CLASSNAME);
  })
});

// 4-4. Ïù¥Ï†Ñ ÌÉêÏÉâ Î≤ÑÌäº Í∞êÏ∂§ | Ïù¥Ï†Ñ ÌÉêÏÉâ Í∏∞Îä•(Ìï®Ïàò) Íµ¨ÌòÑ
(() => {
  const carousel = document.querySelector('.carousel');
  const contentsWrapper = carousel.querySelector('.carousel__contents');
  const prevButton = carousel.querySelector('[aria-label^="Ïù¥Ï†Ñ"]');
  const nextButton = carousel.querySelector('[aria-label^="Îã§Ïùå"]');
  
  const SELECTED_CLASSNAME = 'is-selected';

  nextButton.addEventListener('click', () => {
    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const nextContent = selectedContent.nextElementSibling;

    if (!nextContent.nextElementSibling) nextButton.hidden = true;

    const distance = getComputedStyle(nextContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    nextContent.classList.add(SELECTED_CLASSNAME);
  })

  prevButton.addEventListener('click', () => {
    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const prevContent = selectedContent.previousElementSibling;
    
    // Ïù¥Ï†Ñ ÌÉêÏÉâ Î≤ÑÌäº Í∞êÏ∂§
    if (!prevContent.previousElementSibling) prevButton.hidden = true;

    const distance = getComputedStyle(prevContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    prevContent.classList.add(SELECTED_CLASSNAME);
  })
});

// 5-1. Ïù¥Ï†Ñ/Îã§Ïùå ÌÉêÏÉâ Î≤ÑÌäº (Îã§Ïãú) ÌëúÏãú | Ïù¥Ï†Ñ ÌÉêÏÉâ Í∏∞Îä•(Ìï®Ïàò) Íµ¨ÌòÑ
(() => {
  const carousel = document.querySelector('.carousel');
  const contentsWrapper = carousel.querySelector('.carousel__contents');
  const prevButton = carousel.querySelector('[aria-label^="Ïù¥Ï†Ñ"]');
  const nextButton = carousel.querySelector('[aria-label^="Îã§Ïùå"]');
  
  const SELECTED_CLASSNAME = 'is-selected';

  nextButton.addEventListener('click', () => {
    // ÏÇ¨Ïö©ÏûêÍ∞Ä Îã§Ïùå ÌÉêÏÉâ Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÎ©¥, Ïù¥Ï†Ñ ÌÉêÏÉâ Î≤ÑÌäºÏùò hidden ÏÜçÏÑ± Í∞íÏù¥ trueÏù∏ÏßÄ ÌôïÏù∏Ìï¥ÏÑú ÎßåÏïΩ Í∑∏ Í∞íÏù¥ trueÎùºÎ©¥?
    // hidden ÏÜçÏÑ± Í∞íÏùÑ falseÎ°ú Î≥ÄÍ≤ΩÌïòÎùº.
    if (prevButton.hidden) prevButton.hidden = false;


    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const nextContent = selectedContent.nextElementSibling;

    if (!nextContent.nextElementSibling) nextButton.hidden = true;

    const distance = getComputedStyle(nextContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    nextContent.classList.add(SELECTED_CLASSNAME);
  })

  prevButton.addEventListener('click', () => {
    // Ïù¥Ï†Ñ ÌÉêÏÉâ Î≤ÑÌäºÏùÑ ÏÇ¨Ïö©ÏûêÍ∞Ä ÎàåÎ†ÄÏùÑ Îïå, ÎßåÏïΩ Îã§Ïùå ÌÉêÏÉâ Î≤ÑÌäºÏùò hidden ÏÜçÏÑ± Í∞íÏù¥ trueÎùºÎ©¥?
    // Îã§Ïùå ÌÉêÏÉâ Î≤ÑÌäºÏùò hidden ÏÜçÏÑ± Í∞íÏùÑ falseÎ°ú ÏÑ§Ï†ïÌïòÎùº.
    if (nextButton.hidden) {
      nextButton.hidden = false;
    }

    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const prevContent = selectedContent.previousElementSibling;
    
    // Ïù¥Ï†Ñ ÌÉêÏÉâ Î≤ÑÌäº Í∞êÏ∂§
    if (!prevContent.previousElementSibling) prevButton.hidden = true;

    const distance = getComputedStyle(prevContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    prevContent.classList.add(SELECTED_CLASSNAME);
  })
});

// 5-2. Î°úÎî© Ïãú, Ïù¥Ï†Ñ ÌÉêÏÉâ Î≤ÑÌäº Í∞êÏ∂§
(() => {
  const carousel = document.querySelector('.carousel');
  const contentsWrapper = carousel.querySelector('.carousel__contents');
  const prevButton = carousel.querySelector('[aria-label^="Ïù¥Ï†Ñ"]');
  const nextButton = carousel.querySelector('[aria-label^="Îã§Ïùå"]');
  
  const SELECTED_CLASSNAME = 'is-selected';

  // Î°úÎî© Ïãú, ÏÇ¨Ïö©ÏûêÍ∞Ä Î≥¥Îäî ÌôîÎ©¥ÏóêÏÑú Ïù¥Ï†Ñ ÌÉêÏÉâ Î≤ÑÌäº Í∞êÏ∂§
  prevButton.hidden = true;

  nextButton.addEventListener('click', () => {
    if (prevButton.hidden) prevButton.hidden = false;

    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const nextContent = selectedContent.nextElementSibling;

    if (!nextContent.nextElementSibling) nextButton.hidden = true;

    const distance = getComputedStyle(nextContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    nextContent.classList.add(SELECTED_CLASSNAME);
  })

  prevButton.addEventListener('click', () => {
    if (nextButton.hidden) nextButton.hidden = false;

    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const prevContent = selectedContent.previousElementSibling;

    if (!prevContent.previousElementSibling) prevButton.hidden = true;

    const distance = getComputedStyle(prevContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    prevContent.classList.add(SELECTED_CLASSNAME);
  })
});

// 5-3 Î°úÎî© Ïãú, Ïù¥Ï†Ñ/Îã§Ïùå ÌÉêÏÉâ Î≤ÑÌäº ÌëúÏãú ÏÑ§Ï†ï
// - ÏÇ¨Ïö©ÏûêÍ∞Ä ÌôúÏÑ± ÏÉÅÌÉú ÌÅ¥ÎûòÏä§ Ïù¥Î¶ÑÏùÑ ÏÑ§Ï†ïÌïòÏßÄ ÏïäÏùÑ Í≤ΩÏö∞ Í≤ΩÍ≥†
// - Ï≤´ ÏΩòÌÖêÏ∏†Ïù∏ Í≤ΩÏö∞, Ïù¥Ï†Ñ ÌÉêÏÉâ Î≤ÑÌäº Í∞êÏ∂§
// - ÎßàÏßÄÎßâ ÏΩòÌÖêÏ∏†Ïù∏ Í≤ΩÏö∞, Îã§Ïùå ÌÉêÏÉâ Î≤ÑÌäº Í∞êÏ∂§
(() => {
  const carousel = document.querySelector('.carousel');
  const contentsWrapper = carousel.querySelector('.carousel__contents');
  const contents = contentsWrapper.querySelectorAll('.carousel__content');
  const prevButton = carousel.querySelector('[aria-label^="Ïù¥Ï†Ñ"]');
  const nextButton = carousel.querySelector('[aria-label^="Îã§Ïùå"]');
  
  const SELECTED_CLASSNAME = 'is-selected';

  // Î¨∏ÏÑúÏóêÏÑú ÏΩòÌÖêÏ∏†Î•º ÏàúÌöå(Î£®ÌîÑ, Loop)Ìï¥ÏÑú
  // ÏΩòÌÖêÏ∏† Ï§ëÏóê ÌïòÎÇòÍ∞Ä ÌôúÏÑ± ÏÉÅÌÉú ÌÅ¥ÎûòÏä§ Ïù¥Î¶ÑÏùÑ ÏÜåÏú†ÌïòÍ≥† ÏûàÎäîÏßÄ ÌôïÏù∏
  // ÌôïÏù∏Îêú Í≤ΩÏö∞ ÌôúÏÑ±(ÏÑ†ÌÉùÎêú) ÏÉÅÌÉúÏùò Ïù∏Îç±Ïä§Î•º Î≥ÄÏàòÏóê Í∏∞ÏñµÌï¥Î≥¥Ïûê.


  // ÌôúÏÑ± ÏÉÅÌÉú Ïù∏Îç±Ïä§Î•º Í∏∞ÏñµÌï† Î≥ÄÏàòÎ•º Ï†ïÏùòÌïòÏûê.
  let selectedIndex = -1; // IMPORTANT

  // for Î∞òÎ≥µÎ¨∏ (Î™®Îì† ÏΩòÌÖêÏ∏†Î•º ÏàúÌôò ÌôúÏÑ± ÏÉÅÌÉú ÌôïÏù∏)
  for (let i = 0, l = contents.length; i < l; ++i) {
    // ÏàúÌôò Ï§ëÏù∏ ÏΩòÌÖêÏ∏†Ïóê ÌôúÏÑ± ÏÉÅÌÉú ÌÅ¥ÎûòÏä§ Ïù¥Î¶ÑÏù¥ ÏûàÎäîÏßÄ ÌôïÏù∏
    console.log('ÏàúÌôò Ï§ë');
    if (contents.item(i).classList.contains(SELECTED_CLASSNAME)) {
      console.log('i Î≤àÏß∏ ÏΩòÌÖêÏ∏†Í∞Ä ÌôúÏÑ± ÌÅ¥ÎûòÏä§ Ïù¥Î¶ÑÏùÑ Í∞ÄÏßÄÍ≥† ÏûàÏñ¥Ïöî');
      selectedIndex = i;
      // ÌôúÏÑ± ÏÉÅÌÉú ÌÅ¥ÎûòÏä§ Ïù¥Î¶ÑÏùÑ Í∞ÄÏßÑ ÏΩòÌÖêÏ∏†Î•º Ï∞æÏïòÏúºÎãà Îçî Ïù¥ÏÉÅÏùò ÏàúÌôòÏùÄ Î¨¥ÏùòÎØ∏ÌïòÎã§!
      // Í∑∏Îü¨Îãà Î©àÏ∂∞Îùº!
      break;
    }
  }

  // Ï°∞Í±¥ Ï≤òÎ¶¨
  // ÌôúÏÑ± ÌÅ¥ÎûòÏä§Î•º Í∞ÄÏßÑ ÏöîÏÜåÏùò Ïù∏Îç±Ïä§Í∞Ä -1Ïù¥Î©¥
  if (selectedIndex === -1) {
    console.warn('Ïñ¥Îñ§ Ï∫êÎü¨ÏÖÄ ÏΩòÌÖêÏ∏†ÏóêÎèÑ ÌôúÏÑ± ÏÉÅÌÉúÎ•º ÎÇòÌÉÄÎÇ¥Îäî ÌÅ¥ÎûòÏä§ Ïù¥Î¶ÑÏù¥ Ï∂îÍ∞ÄÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§.');
  } else if (selectedIndex === 0) {
    // ÌôúÏÑ± ÌÅ¥ÎûòÏä§Î•º Í∞ÄÏßÑ ÏöîÏÜåÏùò Ïù∏Îç±Ïä§Í∞Ä 0Ïù¥Î©¥
    // Ïù¥Ï†Ñ ÌÉêÏÉâ Î≤ÑÌäºÏùÑ ÌôîÎ©¥ÏóêÏÑú Í∞êÏ∂∞Îùº!
    prevButton.hidden = true;
  } 
  else if (selectedIndex === contents.length - 1) {
    // ÌôúÏÑ± ÌÅ¥ÎûòÏä§Î•º Í∞ÄÏßÑ ÏöîÏÜåÏùò Ïù∏Îç±Ïä§Í∞Ä Î™®Îì† ÏΩòÌÖêÏ∏† Í∞ØÏàòÎ≥¥Îã§ 1 ÏûëÏùÄ Í∞íÏù¥ÎùºÎ©¥
    nextButton.hidden = true;
  }

  // Î°úÎî© Ïãú, ÏÇ¨Ïö©ÏûêÍ∞Ä Î≥¥Îäî ÌôîÎ©¥ÏóêÏÑú Ïù¥Ï†Ñ ÌÉêÏÉâ Î≤ÑÌäº Í∞êÏ∂§
  prevButton.hidden = true;

  nextButton.addEventListener('click', () => {
    if (prevButton.hidden) prevButton.hidden = false;

    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const nextContent = selectedContent.nextElementSibling;

    if (!nextContent.nextElementSibling) nextButton.hidden = true;

    const distance = getComputedStyle(nextContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    nextContent.classList.add(SELECTED_CLASSNAME);
  })

  prevButton.addEventListener('click', () => {
    if (nextButton.hidden) nextButton.hidden = false;

    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const prevContent = selectedContent.previousElementSibling;

    if (!prevContent.previousElementSibling) prevButton.hidden = true;

    const distance = getComputedStyle(prevContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    prevContent.classList.add(SELECTED_CLASSNAME);
  })
});

// 6.
(() => {
  const carousel = document.querySelector('.carousel');
  const contentsWrapper = carousel.querySelector('.carousel__contents');
  const contents = contentsWrapper.querySelectorAll('.carousel__content');
  const prevButton = carousel.querySelector('[aria-label^="Ïù¥Ï†Ñ"]');
  const nextButton = carousel.querySelector('[aria-label^="Îã§Ïùå"]');
  
  const SELECTED_CLASSNAME = 'is-selected';

  settingUpButtonHiddenStatus();

  nextButton.addEventListener('click', () => {
    if (prevButton.hidden) prevButton.hidden = false;

    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const nextContent = selectedContent.nextElementSibling;

    if (!nextContent.nextElementSibling) nextButton.hidden = true;

    const distance = getComputedStyle(nextContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    nextContent.classList.add(SELECTED_CLASSNAME);
  })

  prevButton.addEventListener('click', () => {
    if (nextButton.hidden) nextButton.hidden = false;

    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const prevContent = selectedContent.previousElementSibling;

    if (!prevContent.previousElementSibling) prevButton.hidden = true;

    const distance = getComputedStyle(prevContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    prevContent.classList.add(SELECTED_CLASSNAME);
  })

  // Î≤ÑÌäº Ïà®Í≤®ÏßÑ ÏÉÅÌÉú ÏÑ§Ï†ï Í∏∞Îä•(Ìï®Ïàò) Ï∂îÏ∂ú
  function settingUpButtonHiddenStatus() {
    let selectedIndex = -1;

    for (let i = 0, l = contents.length; i < l; ++i) {
      console.log('ÏàúÌôò Ï§ë');
      if (contents.item(i).classList.contains(SELECTED_CLASSNAME)) {
        console.log('i Î≤àÏß∏ ÏΩòÌÖêÏ∏†Í∞Ä ÌôúÏÑ± ÌÅ¥ÎûòÏä§ Ïù¥Î¶ÑÏùÑ Í∞ÄÏßÄÍ≥† ÏûàÏñ¥Ïöî');
        selectedIndex = i;
        break;
      }
    }
  
    if (selectedIndex === -1) {
      console.warn('Ïñ¥Îñ§ Ï∫êÎü¨ÏÖÄ ÏΩòÌÖêÏ∏†ÏóêÎèÑ ÌôúÏÑ± ÏÉÅÌÉúÎ•º ÎÇòÌÉÄÎÇ¥Îäî ÌÅ¥ÎûòÏä§ Ïù¥Î¶ÑÏù¥ Ï∂îÍ∞ÄÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§.');
    } else if (selectedIndex === 0) {
      prevButton.hidden = true;
    } else if (selectedIndex === contents.length - 1) {
      nextButton.hidden = true;
    }  
  }
});

// 7-1. Ïù∏ÎîîÏºÄÏù¥ÌÑ∞ ÌÉêÏÉâ | Ïù∏ÎîîÏºÄÏù¥ÌÑ∞
(() => {
  const carousel = document.querySelector('.carousel');

  const contentsWrapper = carousel.querySelector('.carousel__contents');
  const contents = contentsWrapper.querySelectorAll('.carousel__content');

  // Ïù∏ÎîîÏºÄÏù¥ÌÑ∞ ÎûòÌçº ÏöîÏÜå Ï∞æÍ∏∞
  const indicatorWrapper = carousel.querySelector('.carousel__indicators');
  // Ïù∏ÎîîÏºÄÏù¥ÌÑ∞(Î≤ÑÌäº) ÏöîÏÜå ÏßëÌï© Ï∞æÍ∏∞
  const indicators = indicatorWrapper.querySelectorAll('.carousel__indicator');


  const prevButton = carousel.querySelector('[aria-label^="Ïù¥Ï†Ñ"]');
  const nextButton = carousel.querySelector('[aria-label^="Îã§Ïùå"]');
  
  const SELECTED_CLASSNAME = 'is-selected';

  settingUpButtonHiddenStatus();

  nextButton.addEventListener('click', () => {
    if (prevButton.hidden) prevButton.hidden = false;

    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const nextContent = selectedContent.nextElementSibling;

    if (!nextContent.nextElementSibling) nextButton.hidden = true;

    const distance = getComputedStyle(nextContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    nextContent.classList.add(SELECTED_CLASSNAME);
  })

  prevButton.addEventListener('click', () => {
    if (nextButton.hidden) nextButton.hidden = false;

    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const prevContent = selectedContent.previousElementSibling;

    if (!prevContent.previousElementSibling) prevButton.hidden = true;

    const distance = getComputedStyle(prevContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    prevContent.classList.add(SELECTED_CLASSNAME);
  })

  function settingUpButtonHiddenStatus() {
    let selectedIndex = -1;

    for (let i = 0, l = contents.length; i < l; ++i) {
      console.log('ÏàúÌôò Ï§ë');
      if (contents.item(i).classList.contains(SELECTED_CLASSNAME)) {
        console.log('i Î≤àÏß∏ ÏΩòÌÖêÏ∏†Í∞Ä ÌôúÏÑ± ÌÅ¥ÎûòÏä§ Ïù¥Î¶ÑÏùÑ Í∞ÄÏßÄÍ≥† ÏûàÏñ¥Ïöî');
        selectedIndex = i;
        break;
      }
    }
  
    if (selectedIndex === -1) {
      console.warn('Ïñ¥Îñ§ Ï∫êÎü¨ÏÖÄ ÏΩòÌÖêÏ∏†ÏóêÎèÑ ÌôúÏÑ± ÏÉÅÌÉúÎ•º ÎÇòÌÉÄÎÇ¥Îäî ÌÅ¥ÎûòÏä§ Ïù¥Î¶ÑÏù¥ Ï∂îÍ∞ÄÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§.');
    } else if (selectedIndex === 0) {
      prevButton.hidden = true;
    } else if (selectedIndex === contents.length - 1) {
      nextButton.hidden = true;
    }  
  }
});

// 7-1. Ïù∏ÎîîÏºÄÏù¥ÌÑ∞ ÌÉêÏÉâ | Ïù∏ÎîîÏºÄÏù¥ÌÑ∞
(() => {
  const carousel = document.querySelector('.carousel');

  const contentsWrapper = carousel.querySelector('.carousel__contents');
  const contents = contentsWrapper.querySelectorAll('.carousel__content');

  // Ïù∏ÎîîÏºÄÏù¥ÌÑ∞ ÎûòÌçº ÏöîÏÜå Ï∞æÍ∏∞
  const indicatorWrapper = carousel.querySelector('.carousel__indicators');
  // Ïù∏ÎîîÏºÄÏù¥ÌÑ∞(Î≤ÑÌäº) ÏöîÏÜå ÏßëÌï© Ï∞æÍ∏∞
  const indicators = indicatorWrapper.querySelectorAll('.carousel__indicator');


  const prevButton = carousel.querySelector('[aria-label^="Ïù¥Ï†Ñ"]');
  const nextButton = carousel.querySelector('[aria-label^="Îã§Ïùå"]');
  
  const SELECTED_CLASSNAME = 'is-selected';

  settingUpButtonHiddenStatus();

  nextButton.addEventListener('click', () => {
    if (prevButton.hidden) prevButton.hidden = false;

    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const nextContent = selectedContent.nextElementSibling;

    if (!nextContent.nextElementSibling) nextButton.hidden = true;

    const distance = getComputedStyle(nextContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    nextContent.classList.add(SELECTED_CLASSNAME);
  })

  prevButton.addEventListener('click', () => {
    if (nextButton.hidden) nextButton.hidden = false;

    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const prevContent = selectedContent.previousElementSibling;

    if (!prevContent.previousElementSibling) prevButton.hidden = true;

    const distance = getComputedStyle(prevContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    prevContent.classList.add(SELECTED_CLASSNAME);
  })

  function settingUpButtonHiddenStatus() {
    let selectedIndex = -1;

    for (let i = 0, l = contents.length; i < l; ++i) {
      console.log('ÏàúÌôò Ï§ë');
      if (contents.item(i).classList.contains(SELECTED_CLASSNAME)) {
        console.log('i Î≤àÏß∏ ÏΩòÌÖêÏ∏†Í∞Ä ÌôúÏÑ± ÌÅ¥ÎûòÏä§ Ïù¥Î¶ÑÏùÑ Í∞ÄÏßÄÍ≥† ÏûàÏñ¥Ïöî');
        selectedIndex = i;
        break;
      }
    }
  
    if (selectedIndex === -1) {
      console.warn('Ïñ¥Îñ§ Ï∫êÎü¨ÏÖÄ ÏΩòÌÖêÏ∏†ÏóêÎèÑ ÌôúÏÑ± ÏÉÅÌÉúÎ•º ÎÇòÌÉÄÎÇ¥Îäî ÌÅ¥ÎûòÏä§ Ïù¥Î¶ÑÏù¥ Ï∂îÍ∞ÄÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§.');
    } else if (selectedIndex === 0) {
      prevButton.hidden = true;
    } else if (selectedIndex === contents.length - 1) {
      nextButton.hidden = true;
    }  
  }
});

// 7-2. Ïù∏ÎîîÏºÄÏù¥ÌÑ∞ ÏßëÌï©ÏùÑ ÏàúÌôòÌï¥ Ïù¥Î≤§Ìä∏ Î¶¨Ïä§ÎÑà Ï∂îÍ∞Ä | Ïù∏ÎîîÏºÄÏù¥ÌÑ∞
(() => {
  const carousel = document.querySelector('.carousel');

  const contentsWrapper = carousel.querySelector('.carousel__contents');
  const contents = contentsWrapper.querySelectorAll('.carousel__content');

  const indicatorWrapper = carousel.querySelector('.carousel__indicators');
  const indicators = indicatorWrapper.querySelectorAll('.carousel__indicator');


  const prevButton = carousel.querySelector('[aria-label^="Ïù¥Ï†Ñ"]');
  const nextButton = carousel.querySelector('[aria-label^="Îã§Ïùå"]');
  
  const SELECTED_CLASSNAME = 'is-selected';

  settingUpButtonHiddenStatus();

  nextButton.addEventListener('click', () => {
    if (prevButton.hidden) prevButton.hidden = false;

    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const nextContent = selectedContent.nextElementSibling;

    if (!nextContent.nextElementSibling) nextButton.hidden = true;

    const distance = getComputedStyle(nextContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    nextContent.classList.add(SELECTED_CLASSNAME);
  })

  prevButton.addEventListener('click', () => {
    if (nextButton.hidden) nextButton.hidden = false;

    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const prevContent = selectedContent.previousElementSibling;

    if (!prevContent.previousElementSibling) prevButton.hidden = true;

    const distance = getComputedStyle(prevContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    prevContent.classList.add(SELECTED_CLASSNAME);
  })

  // Ïù∏ÎîîÏºÄÏù¥ÌÑ∞ ÏßëÌï©ÏùÑ ÏàúÌôò Ï≤òÎ¶¨
  for (const indicator of indicators) {
    // Í∞Å Ïù∏ÎîîÏºÄÏù¥ÌÑ∞Ïóê Ïù¥Î≤§Ìä∏ Î¶¨Ïä§ÎÑà Ï∂îÍ∞Ä
    indicator.addEventListener('click', () => {
      console.log('clicked!');
    })
  }

  function settingUpButtonHiddenStatus() {
    let selectedIndex = -1;

    for (let i = 0, l = contents.length; i < l; ++i) {
      console.log('ÏàúÌôò Ï§ë');
      if (contents.item(i).classList.contains(SELECTED_CLASSNAME)) {
        console.log('i Î≤àÏß∏ ÏΩòÌÖêÏ∏†Í∞Ä ÌôúÏÑ± ÌÅ¥ÎûòÏä§ Ïù¥Î¶ÑÏùÑ Í∞ÄÏßÄÍ≥† ÏûàÏñ¥Ïöî');
        selectedIndex = i;
        break;
      }
    }
  
    if (selectedIndex === -1) {
      console.warn('Ïñ¥Îñ§ Ï∫êÎü¨ÏÖÄ ÏΩòÌÖêÏ∏†ÏóêÎèÑ ÌôúÏÑ± ÏÉÅÌÉúÎ•º ÎÇòÌÉÄÎÇ¥Îäî ÌÅ¥ÎûòÏä§ Ïù¥Î¶ÑÏù¥ Ï∂îÍ∞ÄÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§.');
    } else if (selectedIndex === 0) {
      prevButton.hidden = true;
    } else if (selectedIndex === contents.length - 1) {
      nextButton.hidden = true;
    }  
  }
});

// 7-3. ÌÉêÏÉâÌïú Ïù∏Îç±Ïä§ Ï∞æÍ∏∞ | Ïù∏ÎîîÏºÄÏù¥ÌÑ∞
(() => {
  const carousel = document.querySelector('.carousel');

  const contentsWrapper = carousel.querySelector('.carousel__contents');
  const contents = contentsWrapper.querySelectorAll('.carousel__content');

  const indicatorWrapper = carousel.querySelector('.carousel__indicators');
  const indicators = indicatorWrapper.querySelectorAll('.carousel__indicator');


  const prevButton = carousel.querySelector('[aria-label^="Ïù¥Ï†Ñ"]');
  const nextButton = carousel.querySelector('[aria-label^="Îã§Ïùå"]');
  
  const SELECTED_CLASSNAME = 'is-selected';

  settingUpButtonHiddenStatus();

  nextButton.addEventListener('click', () => {
    if (prevButton.hidden) prevButton.hidden = false;

    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const nextContent = selectedContent.nextElementSibling;

    if (!nextContent.nextElementSibling) nextButton.hidden = true;

    const distance = getComputedStyle(nextContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    nextContent.classList.add(SELECTED_CLASSNAME);
  })

  prevButton.addEventListener('click', () => {
    if (nextButton.hidden) nextButton.hidden = false;

    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const prevContent = selectedContent.previousElementSibling;

    if (!prevContent.previousElementSibling) prevButton.hidden = true;

    const distance = getComputedStyle(prevContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    prevContent.classList.add(SELECTED_CLASSNAME);
  })

  for (const indicator of indicators) {
    indicator.addEventListener('click', () => {
      // Ï†ÑÏóê ÏÇ¥Ìé¥Î≥∏ ÌôúÏÑ± ÏÉÅÌÉú ÌÅ¥ÎûòÏä§ Ïù¥Î¶ÑÏùÑ Í∞ÄÏßÄÎäîÏßÄ Ïó¨Î∂ÄÎ•º ÌôïÏù∏ÌïòÎäî Í≤ÉÏùÄ ÏóÜÏùÑ ÏàòÎèÑ ÏûàÏßÄÎßå,
      // Ïù∏ÎîîÏºÄÏù¥ÌÑ∞Î•º ÌÅ¥Î¶≠ÌñàÏùÑ Îïå, Î¨∏ÏÑúÏùò Ïù∏ÎîîÏºÄÏù¥ÌÑ∞Îì§ Ï§ë ÌÅ¥Î¶≠Ìïú Ïù∏ÎîîÏºÄÏù¥ÌÑ∞ÏôÄ Í∞ôÏùÄ ÏöîÏÜåÏù∏ÏßÄ ÌôïÏù∏ÌïòÎäî Í≤ÉÏùÄ Ï°¥Ïû¨ÌïòÏßÄ ÏïäÏùÑ Í∞ÄÎä•ÏÑ±Ïù¥ ÏóÜÏñ¥ÏÑúÏûÖÎãàÎã§. -> Ï°¥Ïû¨ÌïúÎã§?
      // Ïñ¥Ï∞®Ìîº Î¨¥Ï°∞Í±¥ 0 , 1, 2 Ï§ëÏóê ÏÑ†ÌÉùÌï† Í±∞ÎãàÍπå -1 ÌïÑÏöî ÏóÜÏùå.
      let selectedIndex;

      for (let i = 0, l = indicators.length; i < l; i += 1) {
        // ÏàúÌôò Ï§ëÏù∏ ÏÉÅÌÉúÏùò Ïù∏ÎîîÏºÄÏù¥ÌÑ∞ÏôÄ ÌòÑÏû¨ ÌÅ¥Î¶≠Ìïú Ïù∏ÎîîÏºÄÏù¥ÌÑ∞Í∞Ä ÎèôÏùºÌïúÍ∞Ä?
        if (indicators.item(i) === indicator) {
          // ÎèôÏùºÌïòÎã§Î©¥, Í∑∏ Ïù∏Îç±Ïä§Í∞Ä ÏÑ†ÌÉùÎêú Ïù∏Îç±Ïä§Ïù¥Îã§.
          selectedIndex = i;
          break;
        }
      }
      // ÏÇ¨Ïö©ÏûêÍ∞Ä ÌÅ¥Î¶≠Ìïú(ÏÑ†ÌÉùÌïú) Ïù∏ÎîîÏºÄÏù¥ÌÑ∞Ïùò ÏÑ†ÌÉùÎêú Ïù∏Îç±Ïä§ Í∞í Ï∞æÍ∏∞
      console.log(indicator, selectedIndex);
    })
  }

  function settingUpButtonHiddenStatus() {
    let selectedIndex = -1;

    for (let i = 0, l = contents.length; i < l; ++i) {
      console.log('ÏàúÌôò Ï§ë');
      if (contents.item(i).classList.contains(SELECTED_CLASSNAME)) {
        console.log('i Î≤àÏß∏ ÏΩòÌÖêÏ∏†Í∞Ä ÌôúÏÑ± ÌÅ¥ÎûòÏä§ Ïù¥Î¶ÑÏùÑ Í∞ÄÏßÄÍ≥† ÏûàÏñ¥Ïöî');
        selectedIndex = i;
        break;
      }
    }
  
    if (selectedIndex === -1) {
      console.warn('Ïñ¥Îñ§ Ï∫êÎü¨ÏÖÄ ÏΩòÌÖêÏ∏†ÏóêÎèÑ ÌôúÏÑ± ÏÉÅÌÉúÎ•º ÎÇòÌÉÄÎÇ¥Îäî ÌÅ¥ÎûòÏä§ Ïù¥Î¶ÑÏù¥ Ï∂îÍ∞ÄÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§.');
    } else if (selectedIndex === 0) {
      prevButton.hidden = true;
    } else if (selectedIndex === contents.length - 1) {
      nextButton.hidden = true;
    }  
  }
});

// 7-4. ÌÉêÏÉâÌïú ÏΩòÌÖêÏ∏† Ï∞æÍ∏∞ | Ïù∏ÎîîÏºÄÏù¥ÌÑ∞
(() => {
  const carousel = document.querySelector('.carousel');

  const contentsWrapper = carousel.querySelector('.carousel__contents');
  const contents = contentsWrapper.querySelectorAll('.carousel__content');

  const indicatorWrapper = carousel.querySelector('.carousel__indicators');
  const indicators = indicatorWrapper.querySelectorAll('.carousel__indicator');


  const prevButton = carousel.querySelector('[aria-label^="Ïù¥Ï†Ñ"]');
  const nextButton = carousel.querySelector('[aria-label^="Îã§Ïùå"]');
  
  const SELECTED_CLASSNAME = 'is-selected';

  settingUpButtonHiddenStatus();

  nextButton.addEventListener('click', () => {
    if (prevButton.hidden) prevButton.hidden = false;

    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const nextContent = selectedContent.nextElementSibling;

    if (!nextContent.nextElementSibling) nextButton.hidden = true;

    const distance = getComputedStyle(nextContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    nextContent.classList.add(SELECTED_CLASSNAME);
  })

  prevButton.addEventListener('click', () => {
    if (nextButton.hidden) nextButton.hidden = false;

    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const prevContent = selectedContent.previousElementSibling;

    if (!prevContent.previousElementSibling) prevButton.hidden = true;

    const distance = getComputedStyle(prevContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    prevContent.classList.add(SELECTED_CLASSNAME);
  })

  for (const indicator of indicators) {
    indicator.addEventListener('click', () => {
      let selectedIndex;

      for (let i = 0, l = indicators.length; i < l; i += 1) {
        if (indicators.item(i) === indicator) {
          selectedIndex = i;
          break;
        }
      }
      
      // ÌÉêÏÉâÌïú (ÏÇ¨Ïö©ÏûêÍ∞Ä ÏÑ†ÌÉùÌïú Ïù∏ÎîîÏºÄÏù¥ÌÑ∞Ïùò Ïù∏Îç±Ïä§) ÏΩòÌÖêÏ∏† Ï∞æÍ∏∞
      const activeContent = contents.item(selectedIndex);
      console.log(activeContent);

    })
  }

  function settingUpButtonHiddenStatus() {
    let selectedIndex = -1;

    for (let i = 0, l = contents.length; i < l; ++i) {
      console.log('ÏàúÌôò Ï§ë');
      if (contents.item(i).classList.contains(SELECTED_CLASSNAME)) {
        console.log('i Î≤àÏß∏ ÏΩòÌÖêÏ∏†Í∞Ä ÌôúÏÑ± ÌÅ¥ÎûòÏä§ Ïù¥Î¶ÑÏùÑ Í∞ÄÏßÄÍ≥† ÏûàÏñ¥Ïöî');
        selectedIndex = i;
        break;
      }
    }
  
    if (selectedIndex === -1) {
      console.warn('Ïñ¥Îñ§ Ï∫êÎü¨ÏÖÄ ÏΩòÌÖêÏ∏†ÏóêÎèÑ ÌôúÏÑ± ÏÉÅÌÉúÎ•º ÎÇòÌÉÄÎÇ¥Îäî ÌÅ¥ÎûòÏä§ Ïù¥Î¶ÑÏù¥ Ï∂îÍ∞ÄÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§.');
    } else if (selectedIndex === 0) {
      prevButton.hidden = true;
    } else if (selectedIndex === contents.length - 1) {
      nextButton.hidden = true;
    }  
  }
});

// 7-5. ÌÉêÏÉâÌïú ÏΩòÌÖêÏ∏†Î°ú Ï†ÑÌôò | Ïù∏ÎîîÏºÄÏù¥ÌÑ∞
(() => {
  const carousel = document.querySelector('.carousel');

  const contentsWrapper = carousel.querySelector('.carousel__contents');
  const contents = contentsWrapper.querySelectorAll('.carousel__content');

  const indicatorWrapper = carousel.querySelector('.carousel__indicators');
  const indicators = indicatorWrapper.querySelectorAll('.carousel__indicator');


  const prevButton = carousel.querySelector('[aria-label^="Ïù¥Ï†Ñ"]');
  const nextButton = carousel.querySelector('[aria-label^="Îã§Ïùå"]');
  
  const SELECTED_CLASSNAME = 'is-selected';

  settingUpButtonHiddenStatus();

  nextButton.addEventListener('click', () => {
    if (prevButton.hidden) prevButton.hidden = false;

    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const nextContent = selectedContent.nextElementSibling;

    if (!nextContent.nextElementSibling) nextButton.hidden = true;

    const distance = getComputedStyle(nextContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    nextContent.classList.add(SELECTED_CLASSNAME);
  })

  prevButton.addEventListener('click', () => {
    if (nextButton.hidden) nextButton.hidden = false;

    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const prevContent = selectedContent.previousElementSibling;

    if (!prevContent.previousElementSibling) prevButton.hidden = true;

    const distance = getComputedStyle(prevContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    prevContent.classList.add(SELECTED_CLASSNAME);
  })

  for (const indicator of indicators) {
    indicator.addEventListener('click', () => {
      let selectedIndex;

      for (let i = 0, l = indicators.length; i < l; i += 1) {
        if (indicators.item(i) === indicator) {
          selectedIndex = i;
          break;
        }
      }

      const activeContent = contents.item(selectedIndex);
      // ÌïÑÏöîÎ°ú ÌïòÎäî Ïù¥ÎèôÏßÄÏ†êÏùÑ ÏïåÍ≥†Ïûê Ìï† Îïå Í≥ÑÏÇ∞Îêú Ïä§ÌÉÄÏùºÏùÑ Í∞ÄÏ†∏Ïò®Îã§.
      const distance = getComputedStyle(activeContent).getPropertyValue('left');
      contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');
    })
  }

  function settingUpButtonHiddenStatus() {
    let selectedIndex = -1;

    for (let i = 0, l = contents.length; i < l; ++i) {
      console.log('ÏàúÌôò Ï§ë');
      if (contents.item(i).classList.contains(SELECTED_CLASSNAME)) {
        console.log('i Î≤àÏß∏ ÏΩòÌÖêÏ∏†Í∞Ä ÌôúÏÑ± ÌÅ¥ÎûòÏä§ Ïù¥Î¶ÑÏùÑ Í∞ÄÏßÄÍ≥† ÏûàÏñ¥Ïöî');
        selectedIndex = i;
        break;
      }
    }
  
    if (selectedIndex === -1) {
      console.warn('Ïñ¥Îñ§ Ï∫êÎü¨ÏÖÄ ÏΩòÌÖêÏ∏†ÏóêÎèÑ ÌôúÏÑ± ÏÉÅÌÉúÎ•º ÎÇòÌÉÄÎÇ¥Îäî ÌÅ¥ÎûòÏä§ Ïù¥Î¶ÑÏù¥ Ï∂îÍ∞ÄÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§.');
    } else if (selectedIndex === 0) {
      prevButton.hidden = true;
    } else if (selectedIndex === contents.length - 1) {
      nextButton.hidden = true;
    }  
  }
});

// 7-6. ÏÑ†ÌÉùÎêú ÏΩòÌÖêÏ∏† ÏÉÅÌÉú Î≥ÄÍ≤Ω | Ïù∏ÎîîÏºÄÏù¥ÌÑ∞
(() => {
  const carousel = document.querySelector('.carousel');

  const contentsWrapper = carousel.querySelector('.carousel__contents');
  const contents = contentsWrapper.querySelectorAll('.carousel__content');

  const indicatorWrapper = carousel.querySelector('.carousel__indicators');
  const indicators = indicatorWrapper.querySelectorAll('.carousel__indicator');


  const prevButton = carousel.querySelector('[aria-label^="Ïù¥Ï†Ñ"]');
  const nextButton = carousel.querySelector('[aria-label^="Îã§Ïùå"]');
  
  const SELECTED_CLASSNAME = 'is-selected';

  settingUpButtonHiddenStatus();

  nextButton.addEventListener('click', () => {
    if (prevButton.hidden) prevButton.hidden = false;

    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const nextContent = selectedContent.nextElementSibling;

    if (!nextContent.nextElementSibling) nextButton.hidden = true;

    const distance = getComputedStyle(nextContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    nextContent.classList.add(SELECTED_CLASSNAME);
  })

  prevButton.addEventListener('click', () => {
    if (nextButton.hidden) nextButton.hidden = false;

    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const prevContent = selectedContent.previousElementSibling;

    if (!prevContent.previousElementSibling) prevButton.hidden = true;

    const distance = getComputedStyle(prevContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    prevContent.classList.add(SELECTED_CLASSNAME);
  })

  for (const indicator of indicators) {
    indicator.addEventListener('click', () => {
      let selectedIndex;

      for (let i = 0, l = indicators.length; i < l; i += 1) {
        if (indicators.item(i) === indicator) {
          selectedIndex = i;
          break;
        }
      }

      const activeContent = contents.item(selectedIndex);
      const distance = getComputedStyle(activeContent).getPropertyValue('left');
      contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

      // ÏÑ†ÌÉùÎêú ÏΩòÌÖêÏ∏† ÏÉÅÌÉú Î≥ÄÍ≤Ω
      // Ïù¥Ï†ÑÏóê ÏÑ†ÌÉùÎêú ÏΩòÌÖêÏ∏† Ï∞æÍ∏∞
      const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
      console.log(selectedContent);

      // Ïù¥Ï†Ñ ÏÑ†ÌÉùÎêú ÏΩòÌÖêÏ∏†Ïóê ÌôúÏÑ± ÌÅ¥ÎûòÏä§ Ïù¥Î¶Ñ Ï†úÍ±∞
      selectedContent.classList.remove(SELECTED_CLASSNAME);

      // ÌòÑÏû¨ ÏÑ†ÌÉùÎêú ÏΩòÌÖêÏ∏†Ïóê ÌôúÏÑ± ÌÅ¥ÎûòÏä§ Ïù¥Î¶Ñ Ï∂îÍ∞Ä
      activeContent.classList.add(SELECTED_CLASSNAME);
    })
  }

  function settingUpButtonHiddenStatus() {
    let selectedIndex = -1;

    for (let i = 0, l = contents.length; i < l; ++i) {
      console.log('ÏàúÌôò Ï§ë');
      if (contents.item(i).classList.contains(SELECTED_CLASSNAME)) {
        console.log('i Î≤àÏß∏ ÏΩòÌÖêÏ∏†Í∞Ä ÌôúÏÑ± ÌÅ¥ÎûòÏä§ Ïù¥Î¶ÑÏùÑ Í∞ÄÏßÄÍ≥† ÏûàÏñ¥Ïöî');
        selectedIndex = i;
        break;
      }
    }
  
    if (selectedIndex === -1) {
      console.warn('Ïñ¥Îñ§ Ï∫êÎü¨ÏÖÄ ÏΩòÌÖêÏ∏†ÏóêÎèÑ ÌôúÏÑ± ÏÉÅÌÉúÎ•º ÎÇòÌÉÄÎÇ¥Îäî ÌÅ¥ÎûòÏä§ Ïù¥Î¶ÑÏù¥ Ï∂îÍ∞ÄÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§.');
    } else if (selectedIndex === 0) {
      prevButton.hidden = true;
    } else if (selectedIndex === contents.length - 1) {
      nextButton.hidden = true;
    }  
  }
});

// 7-7. ÏÑ†ÌÉùÎêú Ïù∏ÎîîÏºÄÏù¥ÌÑ∞ ÏÉÅÌÉú Î≥ÄÍ≤Ω | Ïù∏ÎîîÏºÄÏù¥ÌÑ∞
(() => {
  const carousel = document.querySelector('.carousel');

  const contentsWrapper = carousel.querySelector('.carousel__contents');
  const contents = contentsWrapper.querySelectorAll('.carousel__content');

  const indicatorWrapper = carousel.querySelector('.carousel__indicators');
  const indicators = indicatorWrapper.querySelectorAll('.carousel__indicator');


  const prevButton = carousel.querySelector('[aria-label^="Ïù¥Ï†Ñ"]');
  const nextButton = carousel.querySelector('[aria-label^="Îã§Ïùå"]');
  
  const SELECTED_CLASSNAME = 'is-selected';

  settingUpButtonHiddenStatus();

  nextButton.addEventListener('click', () => {
    if (prevButton.hidden) prevButton.hidden = false;

    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const nextContent = selectedContent.nextElementSibling;

    if (!nextContent.nextElementSibling) nextButton.hidden = true;

    const distance = getComputedStyle(nextContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    nextContent.classList.add(SELECTED_CLASSNAME);
  })

  prevButton.addEventListener('click', () => {
    if (nextButton.hidden) nextButton.hidden = false;

    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const prevContent = selectedContent.previousElementSibling;

    if (!prevContent.previousElementSibling) prevButton.hidden = true;

    const distance = getComputedStyle(prevContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    prevContent.classList.add(SELECTED_CLASSNAME);
  })

  for (const indicator of indicators) {
    indicator.addEventListener('click', () => {
      let selectedIndex;

      for (let i = 0, l = indicators.length; i < l; i += 1) {
        if (indicators.item(i) === indicator) {
          selectedIndex = i;
          break;
        }
      }

      const activeContent = contents.item(selectedIndex);
      const distance = getComputedStyle(activeContent).getPropertyValue('left');
      contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

      const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
      selectedContent.classList.remove(SELECTED_CLASSNAME);
      activeContent.classList.add(SELECTED_CLASSNAME);

      // Ïù¥Ï†Ñ ÏÑ†ÌÉùÎêú Ïù∏ÎîîÏºÄÏù¥ÌÑ∞ Ï∞æÍ∏∞
      const selectedIndicator = indicatorWrapper.querySelector('.' + SELECTED_CLASSNAME)

      // Ïù¥Ï†Ñ ÏÑ†ÌÉùÎêú Ïù∏ÎîîÏºÄÏù¥ÌÑ∞ÏóêÏÑú ÌôúÏÑ± ÌÅ¥ÎûòÏä§ Ïù¥Î¶Ñ Ï†úÍ±∞
      selectedIndicator.classList.remove(SELECTED_CLASSNAME);
      // ÌòÑÏû¨ ÏÑ†ÌÉùÎêú Ïù∏ÎîîÏºÄÏù¥ÌÑ∞ÏóêÏÑú ÌôúÏÑ± ÌÅ¥ÎûòÏä§ Ïù¥Î¶Ñ Ï∂îÍ∞Ä
      indicator.classList.add(SELECTED_CLASSNAME);
    })
  }

  function settingUpButtonHiddenStatus() {
    let selectedIndex = -1;

    for (let i = 0, l = contents.length; i < l; ++i) {
      console.log('ÏàúÌôò Ï§ë');
      if (contents.item(i).classList.contains(SELECTED_CLASSNAME)) {
        console.log('i Î≤àÏß∏ ÏΩòÌÖêÏ∏†Í∞Ä ÌôúÏÑ± ÌÅ¥ÎûòÏä§ Ïù¥Î¶ÑÏùÑ Í∞ÄÏßÄÍ≥† ÏûàÏñ¥Ïöî');
        selectedIndex = i;
        break;
      }
    }
  
    if (selectedIndex === -1) {
      console.warn('Ïñ¥Îñ§ Ï∫êÎü¨ÏÖÄ ÏΩòÌÖêÏ∏†ÏóêÎèÑ ÌôúÏÑ± ÏÉÅÌÉúÎ•º ÎÇòÌÉÄÎÇ¥Îäî ÌÅ¥ÎûòÏä§ Ïù¥Î¶ÑÏù¥ Ï∂îÍ∞ÄÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§.');
    } else if (selectedIndex === 0) {
      prevButton.hidden = true;
    } else if (selectedIndex === contents.length - 1) {
      nextButton.hidden = true;
    }  
  }
});

// 8-1. Îã§Ïùå ÌÉêÏÉâ ÎèôÍ∏∞Ìôî | ÏÉÅÌÉú ÎèôÍ∏∞Ìôî
// Îã§Ïùå ÌÉêÏÉâ Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌñàÏùÑ Îïå, Ïù∏ÎîîÏºÄÏù¥ÌÑ∞ÏôÄ Î≤ÑÌäºÏùÑ ÎèôÍ∏∞Ìôî
(() => {
  const carousel = document.querySelector('.carousel');

  const contentsWrapper = carousel.querySelector('.carousel__contents');
  const contents = contentsWrapper.querySelectorAll('.carousel__content');

  const indicatorWrapper = carousel.querySelector('.carousel__indicators');
  const indicators = indicatorWrapper.querySelectorAll('.carousel__indicator');


  const prevButton = carousel.querySelector('[aria-label^="Ïù¥Ï†Ñ"]');
  const nextButton = carousel.querySelector('[aria-label^="Îã§Ïùå"]');
  
  const SELECTED_CLASSNAME = 'is-selected';

  settingUpButtonHiddenStatus();

  nextButton.addEventListener('click', () => {
    if (prevButton.hidden) prevButton.hidden = false;

    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const nextContent = selectedContent.nextElementSibling;

    if (!nextContent.nextElementSibling) nextButton.hidden = true;

    const distance = getComputedStyle(nextContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    nextContent.classList.add(SELECTED_CLASSNAME);

    // ÏÇ¨Ïö©ÏûêÍ∞Ä Îã§Ïùå ÌÉêÏÉâ Î≤ÑÌäºÏùÑ ÎàÑÎ•¥Î©¥, Ïù∏ÎîîÏºÄÏù¥ÌÑ∞ Ï§ëÏóê ÌòÑÏû¨ ÌôúÏÑ± ÏÉÅÌÉúÏù∏ Í≤ÉÏùÑ Ï∞æÍ∏∞
    const selectedIndicator = indicatorWrapper.querySelector('.' + SELECTED_CLASSNAME);
    console.log(selectedIndicator);

    // Ïù¥Ï†Ñ ÏÑ†ÌÉùÎêú Ïù∏ÎîîÏºÄÏù¥ÌÑ∞Ïóê ÌôúÏÑ± ÌÅ¥ÎûòÏä§ Ïù¥Î¶Ñ Ï†úÍ±∞
    // selectedIndicator.classList.remove(SELECTED_CLASSNAME);

    // Îã§Ïùå ÏÑ†ÌÉùÎê† Ïù∏ÎîîÏºÄÏù¥ÌÑ∞Ïóê ÌôúÏÑ± ÌÅ¥ÎûòÏä§ Ïù¥Î¶Ñ Ï∂îÍ∞Ä
    // selectedIndicator.classList.add(SELECTED_CLASSNAME);
  })

  prevButton.addEventListener('click', () => {
    if (nextButton.hidden) nextButton.hidden = false;

    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const prevContent = selectedContent.previousElementSibling;

    if (!prevContent.previousElementSibling) prevButton.hidden = true;

    const distance = getComputedStyle(prevContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    prevContent.classList.add(SELECTED_CLASSNAME);
  })

  for (const indicator of indicators) {
    indicator.addEventListener('click', () => {
      let selectedIndex;

      for (let i = 0, l = indicators.length; i < l; i += 1) {
        if (indicators.item(i) === indicator) {
          selectedIndex = i;
          break;
        }
      }

      const activeContent = contents.item(selectedIndex);
      const distance = getComputedStyle(activeContent).getPropertyValue('left');
      contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

      const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
      selectedContent.classList.remove(SELECTED_CLASSNAME);
      activeContent.classList.add(SELECTED_CLASSNAME);

      const selectedIndicator = indicatorWrapper.querySelector('.' + SELECTED_CLASSNAME)
      selectedIndicator.classList.remove(SELECTED_CLASSNAME);
      indicator.classList.add(SELECTED_CLASSNAME);
    })
  }

  function settingUpButtonHiddenStatus() {
    let selectedIndex = -1;

    for (let i = 0, l = contents.length; i < l; ++i) {
      console.log('ÏàúÌôò Ï§ë');
      if (contents.item(i).classList.contains(SELECTED_CLASSNAME)) {
        console.log('i Î≤àÏß∏ ÏΩòÌÖêÏ∏†Í∞Ä ÌôúÏÑ± ÌÅ¥ÎûòÏä§ Ïù¥Î¶ÑÏùÑ Í∞ÄÏßÄÍ≥† ÏûàÏñ¥Ïöî');
        selectedIndex = i;
        break;
      }
    }
  
    if (selectedIndex === -1) {
      console.warn('Ïñ¥Îñ§ Ï∫êÎü¨ÏÖÄ ÏΩòÌÖêÏ∏†ÏóêÎèÑ ÌôúÏÑ± ÏÉÅÌÉúÎ•º ÎÇòÌÉÄÎÇ¥Îäî ÌÅ¥ÎûòÏä§ Ïù¥Î¶ÑÏù¥ Ï∂îÍ∞ÄÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§.');
    } else if (selectedIndex === 0) {
      prevButton.hidden = true;
    } else if (selectedIndex === contents.length - 1) {
      nextButton.hidden = true;
    }  
  }
});

// 8-1. Îã§Ïùå ÌÉêÏÉâ ÎèôÍ∏∞Ìôî | ÏÉÅÌÉú ÎèôÍ∏∞Ìôî
// Îã§Ïùå ÌÉêÏÉâ Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌñàÏùÑ Îïå, Ïù∏ÎîîÏºÄÏù¥ÌÑ∞ÏôÄ Î≤ÑÌäºÏùÑ ÎèôÍ∏∞Ìôî
(() => {
  const carousel = document.querySelector('.carousel');

  const contentsWrapper = carousel.querySelector('.carousel__contents');
  const contents = contentsWrapper.querySelectorAll('.carousel__content');

  const indicatorWrapper = carousel.querySelector('.carousel__indicators');
  const indicators = indicatorWrapper.querySelectorAll('.carousel__indicator');


  const prevButton = carousel.querySelector('[aria-label^="Ïù¥Ï†Ñ"]');
  const nextButton = carousel.querySelector('[aria-label^="Îã§Ïùå"]');
  
  const SELECTED_CLASSNAME = 'is-selected';

  settingUpButtonHiddenStatus();

  nextButton.addEventListener('click', () => {
    if (prevButton.hidden) prevButton.hidden = false;

    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const nextContent = selectedContent.nextElementSibling;

    if (!nextContent.nextElementSibling) nextButton.hidden = true;

    const distance = getComputedStyle(nextContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    nextContent.classList.add(SELECTED_CLASSNAME);

    // ÏÇ¨Ïö©ÏûêÍ∞Ä Îã§Ïùå ÌÉêÏÉâ Î≤ÑÌäºÏùÑ ÎàÑÎ•¥Î©¥, Ïù∏ÎîîÏºÄÏù¥ÌÑ∞ Ï§ëÏóê ÌòÑÏû¨ ÌôúÏÑ± ÏÉÅÌÉúÏù∏ Í≤ÉÏùÑ Ï∞æÍ∏∞
    const selectedIndicator = indicatorWrapper.querySelector('.' + SELECTED_CLASSNAME);
    console.log(selectedIndicator);

    // Ïù¥Ï†Ñ ÏÑ†ÌÉùÎêú Ïù∏ÎîîÏºÄÏù¥ÌÑ∞Ïóê ÌôúÏÑ± ÌÅ¥ÎûòÏä§ Ïù¥Î¶Ñ Ï†úÍ±∞
    // selectedIndicator.classList.remove(SELECTED_CLASSNAME);

    // Îã§Ïùå ÏÑ†ÌÉùÎê† Ïù∏ÎîîÏºÄÏù¥ÌÑ∞Ïóê ÌôúÏÑ± ÌÅ¥ÎûòÏä§ Ïù¥Î¶Ñ Ï∂îÍ∞Ä
    // selectedIndicator.classList.add(SELECTED_CLASSNAME);
  })

  prevButton.addEventListener('click', () => {
    if (nextButton.hidden) nextButton.hidden = false;

    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const prevContent = selectedContent.previousElementSibling;

    if (!prevContent.previousElementSibling) prevButton.hidden = true;

    const distance = getComputedStyle(prevContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    prevContent.classList.add(SELECTED_CLASSNAME);
  })

  for (const indicator of indicators) {
    indicator.addEventListener('click', () => {
      let selectedIndex;

      for (let i = 0, l = indicators.length; i < l; i += 1) {
        if (indicators.item(i) === indicator) {
          selectedIndex = i;
          break;
        }
      }

      const activeContent = contents.item(selectedIndex);
      const distance = getComputedStyle(activeContent).getPropertyValue('left');
      contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

      const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
      selectedContent.classList.remove(SELECTED_CLASSNAME);
      activeContent.classList.add(SELECTED_CLASSNAME);

      const selectedIndicator = indicatorWrapper.querySelector('.' + SELECTED_CLASSNAME)
      selectedIndicator.classList.remove(SELECTED_CLASSNAME);
      indicator.classList.add(SELECTED_CLASSNAME);
    })
  }

  function settingUpButtonHiddenStatus() {
    let selectedIndex = -1;

    for (let i = 0, l = contents.length; i < l; ++i) {
      console.log('ÏàúÌôò Ï§ë');
      if (contents.item(i).classList.contains(SELECTED_CLASSNAME)) {
        console.log('i Î≤àÏß∏ ÏΩòÌÖêÏ∏†Í∞Ä ÌôúÏÑ± ÌÅ¥ÎûòÏä§ Ïù¥Î¶ÑÏùÑ Í∞ÄÏßÄÍ≥† ÏûàÏñ¥Ïöî');
        selectedIndex = i;
        break;
      }
    }
  
    if (selectedIndex === -1) {
      console.warn('Ïñ¥Îñ§ Ï∫êÎü¨ÏÖÄ ÏΩòÌÖêÏ∏†ÏóêÎèÑ ÌôúÏÑ± ÏÉÅÌÉúÎ•º ÎÇòÌÉÄÎÇ¥Îäî ÌÅ¥ÎûòÏä§ Ïù¥Î¶ÑÏù¥ Ï∂îÍ∞ÄÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§.');
    } else if (selectedIndex === 0) {
      prevButton.hidden = true;
    } else if (selectedIndex === contents.length - 1) {
      nextButton.hidden = true;
    }  
  }
});

// 8-2. Îã§Ïùå ÌÉêÏÉâ ÎèôÍ∏∞Ìôî | ÏÉÅÌÉú ÎèôÍ∏∞Ìôî
// Ïù¥Ï†Ñ ÌÉêÏÉâ Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌñàÏùÑ Îïå, Ïù∏ÎîîÏºÄÏù¥ÌÑ∞ÏôÄ Î≤ÑÌäºÏùÑ ÎèôÍ∏∞Ìôî
(() => {
  const carousel = document.querySelector('.carousel');

  const contentsWrapper = carousel.querySelector('.carousel__contents');
  const contents = contentsWrapper.querySelectorAll('.carousel__content');

  const indicatorWrapper = carousel.querySelector('.carousel__indicators');
  const indicators = indicatorWrapper.querySelectorAll('.carousel__indicator');


  const prevButton = carousel.querySelector('[aria-label^="Ïù¥Ï†Ñ"]');
  const nextButton = carousel.querySelector('[aria-label^="Îã§Ïùå"]');
  
  const SELECTED_CLASSNAME = 'is-selected';

  settingUpButtonHiddenStatus();

  nextButton.addEventListener('click', () => {
    if (prevButton.hidden) prevButton.hidden = false;

    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const nextContent = selectedContent.nextElementSibling;

    if (!nextContent.nextElementSibling) nextButton.hidden = true;

    const distance = getComputedStyle(nextContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    nextContent.classList.add(SELECTED_CLASSNAME);

    const selectedIndicator = indicatorWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const nextIndicator = selectedIndicator.nextElementSibling;

    selectedIndicator.classList.remove(SELECTED_CLASSNAME);
    nextIndicator.classList.add(SELECTED_CLASSNAME);
  })

  prevButton.addEventListener('click', () => {
    if (nextButton.hidden) nextButton.hidden = false;

    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const prevContent = selectedContent.previousElementSibling;

    if (!prevContent.previousElementSibling) prevButton.hidden = true;

    const distance = getComputedStyle(prevContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    prevContent.classList.add(SELECTED_CLASSNAME);

    // ÏÇ¨Ïö©ÏûêÍ∞Ä Ïù¥Ï†Ñ ÌÉêÏÉâ Î≤ÑÌäºÏùÑ ÎàÑÎ•¥Î©¥
    // Ïù∏ÎîîÏºÄÏù¥ÌÑ∞ Ï§ëÏóê ÌòÑÏû¨ ÌôúÏÑ± ÏÉÅÌÉúÏù∏ Í≤ÉÏùÑ Ï∞æÍ∏∞
    const selectedIndicator = indicatorWrapper.querySelector('.' + SELECTED_CLASSNAME)
    const prevIndicator = selectedIndicator.previousElementSibling;
  
    // Ïù¥Ï†Ñ ÏÑ†ÌÉùÎêú Ïù∏ÎîîÏºÄÏù¥ÌÑ∞ÏóêÏÑú ÌôúÏÑ± ÌÅ¥ÎûòÏä§ Ïù¥Î¶Ñ Ï†úÍ±∞
    selectedIndicator.classList.remove(SELECTED_CLASSNAME);

    // ÌòÑÏû¨ ÏÑ†ÌÉùÎê† Ïù∏ÎîîÏºÄÏù¥ÌÑ∞Ïóê ÌôúÏÑ± ÌÅ¥ÎûòÏä§ Ïù¥Î¶Ñ Ï∂îÍ∞Ä
    prevIndicator.classList.add(SELECTED_CLASSNAME);
  })

  for (const indicator of indicators) {
    indicator.addEventListener('click', () => {
      let selectedIndex;

      for (let i = 0, l = indicators.length; i < l; i += 1) {
        if (indicators.item(i) === indicator) {
          selectedIndex = i;
          break;
        }
      }

      const activeContent = contents.item(selectedIndex);
      const distance = getComputedStyle(activeContent).getPropertyValue('left');
      contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

      const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
      selectedContent.classList.remove(SELECTED_CLASSNAME);
      activeContent.classList.add(SELECTED_CLASSNAME);

      const selectedIndicator = indicatorWrapper.querySelector('.' + SELECTED_CLASSNAME)
      selectedIndicator.classList.remove(SELECTED_CLASSNAME);
      indicator.classList.add(SELECTED_CLASSNAME);
    })
  }

  function settingUpButtonHiddenStatus() {
    let selectedIndex = -1;

    for (let i = 0, l = contents.length; i < l; ++i) {
      console.log('ÏàúÌôò Ï§ë');
      if (contents.item(i).classList.contains(SELECTED_CLASSNAME)) {
        console.log('i Î≤àÏß∏ ÏΩòÌÖêÏ∏†Í∞Ä ÌôúÏÑ± ÌÅ¥ÎûòÏä§ Ïù¥Î¶ÑÏùÑ Í∞ÄÏßÄÍ≥† ÏûàÏñ¥Ïöî');
        selectedIndex = i;
        break;
      }
    }
  
    if (selectedIndex === -1) {
      console.warn('Ïñ¥Îñ§ Ï∫êÎü¨ÏÖÄ ÏΩòÌÖêÏ∏†ÏóêÎèÑ ÌôúÏÑ± ÏÉÅÌÉúÎ•º ÎÇòÌÉÄÎÇ¥Îäî ÌÅ¥ÎûòÏä§ Ïù¥Î¶ÑÏù¥ Ï∂îÍ∞ÄÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§.');
    } else if (selectedIndex === 0) {
      prevButton.hidden = true;
    } else if (selectedIndex === contents.length - 1) {
      nextButton.hidden = true;
    }  
  }
});

// 8-3. Ïù¥Ï†Ñ / Îã§Ïùå ÌÉêÏÉâ Î≤ÑÌäº ÌëúÏãú ÎèôÍ∏∞Ìôî | ÏÉÅÌÉú ÎèôÍ∏∞Ìôî
(() => {
  const carousel = document.querySelector('.carousel');

  const contentsWrapper = carousel.querySelector('.carousel__contents');
  const contents = contentsWrapper.querySelectorAll('.carousel__content');

  const indicatorWrapper = carousel.querySelector('.carousel__indicators');
  const indicators = indicatorWrapper.querySelectorAll('.carousel__indicator');


  const prevButton = carousel.querySelector('[aria-label^="Ïù¥Ï†Ñ"]');
  const nextButton = carousel.querySelector('[aria-label^="Îã§Ïùå"]');
  
  const SELECTED_CLASSNAME = 'is-selected';

  settingUpButtonHiddenStatus();

  nextButton.addEventListener('click', () => {
    if (prevButton.hidden) prevButton.hidden = false;

    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const nextContent = selectedContent.nextElementSibling;

    if (!nextContent.nextElementSibling) nextButton.hidden = true;

    const distance = getComputedStyle(nextContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    nextContent.classList.add(SELECTED_CLASSNAME);

    const selectedIndicator = indicatorWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const nextIndicator = selectedIndicator.nextElementSibling;

    selectedIndicator.classList.remove(SELECTED_CLASSNAME);
    nextIndicator.classList.add(SELECTED_CLASSNAME);
  })

  prevButton.addEventListener('click', () => {
    if (nextButton.hidden) nextButton.hidden = false;

    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const prevContent = selectedContent.previousElementSibling;

    if (!prevContent.previousElementSibling) prevButton.hidden = true;

    const distance = getComputedStyle(prevContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    prevContent.classList.add(SELECTED_CLASSNAME);

    const selectedIndicator = indicatorWrapper.querySelector('.'+SELECTED_CLASSNAME)
    const prevIndicator = selectedIndicator.previousElementSibling

    selectedIndicator.classList.remove(SELECTED_CLASSNAME)

    prevIndicator.classList.add(SELECTED_CLASSNAME)
  })

  for (const indicator of indicators) {
    indicator.addEventListener('click', () => {
      let selectedIndex;

      for (let i = 0, l = indicators.length; i < l; i += 1) {
        if (indicators.item(i) === indicator) {
          selectedIndex = i;
          break;
        }
      }

      const activeContent = contents.item(selectedIndex);
      const distance = getComputedStyle(activeContent).getPropertyValue('left');
      contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

      const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
      selectedContent.classList.remove(SELECTED_CLASSNAME);
      activeContent.classList.add(SELECTED_CLASSNAME);

      const selectedIndicator = indicatorWrapper.querySelector('.' + SELECTED_CLASSNAME)
      selectedIndicator.classList.remove(SELECTED_CLASSNAME);
      indicator.classList.add(SELECTED_CLASSNAME);

      // selectedIndex Í∞íÏù¥ Ï≤òÏùå(0)Ïùº Îïå
      // -> prevButton Ïà®Í∏¥Îã§, nextButton Î≥¥Ïù∏Îã§
      if (selectedIndex === 0) {
        prevButton.hidden = true;
        nextButton.hidden = false;
      }

      // selectedIndex Í∞íÏù¥ ÎßàÏßÄÎßâ Ïù∏Îç±Ïä§(indicators, length -1) Ïùº Îïå
      // -> prevButton Î≥¥Ïù∏Îã§, nextButton Ïà®Í∏¥Îã§
      else if (selectedIndex === indicators.length - 1) {
        prevButton.hidden = false;
        nextButton.hidden = true;
      }
      // Îëò Îã§ ÏïÑÎãê Îïå
      // -> prevButton, nextButton Îëò Îã§ Î≥¥Ïù∏Îã§
      else {
        prevButton.hidden = false;
        nextButton.hidden = false;
      }

    })
  }

  function settingUpButtonHiddenStatus() {
    let selectedIndex = -1;

    for (let i = 0, l = contents.length; i < l; ++i) {
      console.log('ÏàúÌôò Ï§ë');
      if (contents.item(i).classList.contains(SELECTED_CLASSNAME)) {
        console.log('i Î≤àÏß∏ ÏΩòÌÖêÏ∏†Í∞Ä ÌôúÏÑ± ÌÅ¥ÎûòÏä§ Ïù¥Î¶ÑÏùÑ Í∞ÄÏßÄÍ≥† ÏûàÏñ¥Ïöî');
        selectedIndex = i;
        break;
      }
    }
  
    if (selectedIndex === -1) {
      console.warn('Ïñ¥Îñ§ Ï∫êÎü¨ÏÖÄ ÏΩòÌÖêÏ∏†ÏóêÎèÑ ÌôúÏÑ± ÏÉÅÌÉúÎ•º ÎÇòÌÉÄÎÇ¥Îäî ÌÅ¥ÎûòÏä§ Ïù¥Î¶ÑÏù¥ Ï∂îÍ∞ÄÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§.');
    } else if (selectedIndex === 0) {
      prevButton.hidden = true;
    } else if (selectedIndex === contents.length - 1) {
      nextButton.hidden = true;
    }  
  }
});

// 9. ÌÇ§Î≥¥Îìú Ï†ëÍ∑º ÎÖºÎ¶¨Ï†Å Ï¥àÏ†ê Ïù¥Îèô | Ï†ëÍ∑ºÏÑ± Í∞úÏÑ†
(() => {
  const carousel = document.querySelector('.carousel');

  const contentsWrapper = carousel.querySelector('.carousel__contents');
  const contents = contentsWrapper.querySelectorAll('.carousel__content');

  const indicatorWrapper = carousel.querySelector('.carousel__indicators');
  const indicators = indicatorWrapper.querySelectorAll('.carousel__indicator');


  const prevButton = carousel.querySelector('[aria-label^="Ïù¥Ï†Ñ"]');
  const nextButton = carousel.querySelector('[aria-label^="Îã§Ïùå"]');
  
  const SELECTED_CLASSNAME = 'is-selected';

  settingUpButtonHiddenStatus();
  settingTabindexControl();

  // Î°úÎî© Ïãú, ÌôúÏÑ± ÏÉÅÌÉú(ÌôîÎ©¥Ïóê ÌëúÏãúÎêòÎäî)Ïùò ÏΩòÌÖêÏ∏† ÎÇ¥Î∂ÄÏùò ÎßÅÌÅ¨ Ïô∏ Îã§Î•∏ ÎßÅÌÅ¨ÏóêÎäî tabindex="-1" ÏÑ§Ï†ï
  // const activedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
  // console.log(activedContent);

  nextButton.addEventListener('click', () => {
    if (prevButton.hidden) prevButton.hidden = false;

    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const nextContent = selectedContent.nextElementSibling;

    if (!nextContent.nextElementSibling) nextButton.hidden = true;

    const distance = getComputedStyle(nextContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    nextContent.classList.add(SELECTED_CLASSNAME);

    const selectedIndicator = indicatorWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const nextIndicator = selectedIndicator.nextElementSibling;

    selectedIndicator.classList.remove(SELECTED_CLASSNAME);
    nextIndicator.classList.add(SELECTED_CLASSNAME);

    settingTabindexControl();
  })

  prevButton.addEventListener('click', () => {
    if (nextButton.hidden) nextButton.hidden = false;

    const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
    const prevContent = selectedContent.previousElementSibling;

    if (!prevContent.previousElementSibling) prevButton.hidden = true;

    const distance = getComputedStyle(prevContent).getPropertyValue('left');
    contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

    selectedContent.classList.remove(SELECTED_CLASSNAME);
    prevContent.classList.add(SELECTED_CLASSNAME);

    const selectedIndicator = indicatorWrapper.querySelector('.'+SELECTED_CLASSNAME)
    const prevIndicator = selectedIndicator.previousElementSibling;
    selectedIndicator.classList.remove(SELECTED_CLASSNAME);
    prevIndicator.classList.add(SELECTED_CLASSNAME);

    settingTabindexControl();
  })

  for (const indicator of indicators) {
    indicator.addEventListener('click', () => {
      let selectedIndex;

      for (let i = 0, l = indicators.length; i < l; i += 1) {
        if (indicators.item(i) === indicator) {
          selectedIndex = i;
          break;
        }
      }

      const activeContent = contents.item(selectedIndex);
      const distance = getComputedStyle(activeContent).getPropertyValue('left');
      contentsWrapper.style.setProperty('transform', 'translateX(-' + distance + ')');

      const selectedContent = contentsWrapper.querySelector('.' + SELECTED_CLASSNAME);
      selectedContent.classList.remove(SELECTED_CLASSNAME);
      activeContent.classList.add(SELECTED_CLASSNAME);

      const selectedIndicator = indicatorWrapper.querySelector('.' + SELECTED_CLASSNAME)
      selectedIndicator.classList.remove(SELECTED_CLASSNAME);
      indicator.classList.add(SELECTED_CLASSNAME);

      if (selectedIndex === 0) {
        prevButton.hidden = true;
        nextButton.hidden = false;
      } else if (selectedIndex === indicators.length - 1) {
        prevButton.hidden = false;
        nextButton.hidden = true;
      } else {
        prevButton.hidden = false;
        nextButton.hidden = false;
      }

      settingTabindexControl();
    })
  }

  function settingUpButtonHiddenStatus() {
    let selectedIndex = -1;

    for (let i = 0, l = contents.length; i < l; ++i) {
      console.log('ÏàúÌôò Ï§ë');
      if (contents.item(i).classList.contains(SELECTED_CLASSNAME)) {
        selectedIndex = i;
        break;
      }
    }
  
    if (selectedIndex === -1) {
      console.warn('Ïñ¥Îñ§ Ï∫êÎü¨ÏÖÄ ÏΩòÌÖêÏ∏†ÏóêÎèÑ ÌôúÏÑ± ÏÉÅÌÉúÎ•º ÎÇòÌÉÄÎÇ¥Îäî ÌÅ¥ÎûòÏä§ Ïù¥Î¶ÑÏù¥ Ï∂îÍ∞ÄÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§.');
    } else if (selectedIndex === 0) {
      prevButton.hidden = true;
    } else if (selectedIndex === contents.length - 1) {
      nextButton.hidden = true;
    }
  }

  function settingTabindexControl() {
    for (const content of contents) {
      if (content.classList.contains(SELECTED_CLASSNAME)) {
        content.querySelector('a').removeAttribute('tabindex');
      } else {
        content.querySelector('a').setAttribute('tabindex', '-1');
      }
    }
  }
})();